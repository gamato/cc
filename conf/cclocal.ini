[ccserver]
logfile = ~/log/%(job_name)s.log
pidfile = ~/pid/%(job_name)s.pid

# listening socket for this CC instance
cc-socket = tcp://127.0.0.1:10000

# either 'local' or 'remote'
cc-role = local

# stats level; default: 1
cc-stats = 2

cms-keystore = ./keys
#cms-verify-ca = ca
#cms-decrypt = server
#cms-encrypt = confdb

# msgtype -> handler mapping
[routes]
# local routes
log = h:locallog
job = h:jobmgr
echo = h:echo

# remote routes
pub = h:proxycc
task = h:proxycc
db = h:proxycc

# echo service
[h:echo]
handler = cc.handler.echo
#ping-remotes = tcp://127.0.0.1:10001

# send message to local logfile
[h:locallog]
handler = cc.handler.locallogger

# send message to remote cc
[h:proxycc]
handler = cc.handler.proxy
remote-cc = tcp://127.0.0.1:10001
ping = yes

# manage subdaemons
[h:jobmgr]
handler = cc.handler.jobmgr
daemons = d:infosender, d:infoscript, d:taskrunner, d:logtail, d:pg_logforward
#pidfiledir = ~/pid

# subdaemon that collects and sends infofiles, launched by jobmgr
[d:infosender]
module = cc.daemon.infosender
#infodir = /home/nagios
infodir = /tmp/infodir
infomask = info.*
#cms-sign = server
#cms-encrypt = confdb
compression = gzip
compression-level = 1

[d:infoscript]
module = cc.daemon.infoscript
info-name = info.server-stats.pl
#info-script = sudo -H -n -u nagios /home/nagios/server-stats.pl
info-script = ps axuw
info-period = 10
#cms-sign = server
#cms-encrypt = confdb
compression = gzip

[d:taskrunner]
module = cc.daemon.taskrunner
local-id = hostname
#reg-period = 300
#maint-period = 60

[d:logtail]
module = cc.daemon.logtail
logdir = /tmp/infodir
#logmask = log.*
logmask = postgresql-*.log
#logname = postgresql.log
#operation-mode = rotated
use-blob = yes
#compression = gzip
compression-level = 1
lag-max-bytes = 256 MB

[d:pg_logforward]
module = cc.daemon.pg_logforward
listen-host = 0.0.0.0
listen-port = 23456
log-format = netstr
plugins = p:logwatch

[p:logwatch]
module = cc.daemon.plugins.pg_logforward.example_logwatch

[t:sample]
#sudo = marko
